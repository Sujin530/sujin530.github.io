{"expireTime":9007200896899831000,"key":"transformer-remark-markdown-html-ast-47536b659ec38625ebf3e576006292a7-gatsby-remark-imagesgatsby-remark-table-of-contentsgatsby-remark-prismjsgatsby-remark-autolink-headersgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{"id":"shortest-path","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#shortest-path","aria-label":"shortest path permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Shortest Path","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":17,"offset":17}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":17,"offset":17}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"최단경로를 찾는 문제의 특징은 다음과 같다.","position":{"start":{"line":4,"column":1,"offset":19},"end":{"line":4,"column":25,"offset":43}}}],"position":{"start":{"line":4,"column":1,"offset":19},"end":{"line":4,"column":25,"offset":43}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Input : directed graph G = (V, E) with weight function w : E -> R","position":{"start":{"line":6,"column":3,"offset":47},"end":{"line":6,"column":68,"offset":112}}}],"position":{"start":{"line":6,"column":1,"offset":45},"end":{"line":6,"column":68,"offset":112}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"S에서 D까지의 minimum weight을 가지는 path를 찾는 문제이다.","position":{"start":{"line":7,"column":3,"offset":115},"end":{"line":7,"column":46,"offset":158}}}],"position":{"start":{"line":7,"column":1,"offset":113},"end":{"line":7,"column":46,"offset":158}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Weight w(p) of path p : p로 가는 길에 있는 모든 edge weight의 합이다.","position":{"start":{"line":8,"column":3,"offset":161},"end":{"line":8,"column":59,"offset":217}}}],"position":{"start":{"line":8,"column":1,"offset":159},"end":{"line":8,"column":59,"offset":217}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"u부터 v 까지의 shortest-path weight은 다음으로 표현한다","position":{"start":{"line":9,"column":3,"offset":220},"end":{"line":9,"column":44,"offset":261}}}],"position":{"start":{"line":9,"column":1,"offset":218},"end":{"line":9,"column":44,"offset":261}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"S(u,v) = if path가 있으면 u부터 v까지 오는 path 중의 min . 없으면 무한대","position":{"start":{"line":10,"column":3,"offset":264},"end":{"line":10,"column":57,"offset":318}}}],"position":{"start":{"line":10,"column":1,"offset":262},"end":{"line":10,"column":57,"offset":318}}},{"type":"text","value":"\n"}],"position":{"start":{"line":6,"column":1,"offset":45},"end":{"line":10,"column":57,"offset":318}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"variants","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#variants","aria-label":"variants permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Variants","position":{"start":{"line":12,"column":4,"offset":323},"end":{"line":12,"column":12,"offset":331}}}],"position":{"start":{"line":12,"column":1,"offset":320},"end":{"line":12,"column":12,"offset":331}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"최단거리를 찾는 문제는 크게 4종류가 있다.","position":{"start":{"line":14,"column":1,"offset":333},"end":{"line":14,"column":25,"offset":357}}}],"position":{"start":{"line":14,"column":1,"offset":333},"end":{"line":14,"column":25,"offset":357}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ol","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Single-source shortest path : 하나의 S에서 모든 vertex까지 최단거리","position":{"start":{"line":16,"column":4,"offset":362},"end":{"line":16,"column":58,"offset":416}}}],"position":{"start":{"line":16,"column":1,"offset":359},"end":{"line":16,"column":58,"offset":416}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Single-destinations : 모든 vertex에서 하나의 D까지의 최단거리","position":{"start":{"line":17,"column":4,"offset":420},"end":{"line":17,"column":51,"offset":467}}}],"position":{"start":{"line":17,"column":1,"offset":417},"end":{"line":17,"column":51,"offset":467}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Single-pair : 하나의 S로 부터 모든 하나의 D까지의 최단거리","position":{"start":{"line":18,"column":4,"offset":471},"end":{"line":18,"column":44,"offset":511}}}],"position":{"start":{"line":18,"column":1,"offset":468},"end":{"line":18,"column":44,"offset":511}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"All-pair : 모든 vertex의 서로간의 최단거리","position":{"start":{"line":19,"column":4,"offset":515},"end":{"line":19,"column":35,"offset":546}}}],"position":{"start":{"line":19,"column":1,"offset":512},"end":{"line":19,"column":35,"offset":546}}},{"type":"text","value":"\n"}],"position":{"start":{"line":16,"column":1,"offset":359},"end":{"line":19,"column":35,"offset":546}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"1~3번 : Bellman-Ford, DAG, Dijkstara 알고리즘\n4번 : Floyd 알고리즘","position":{"start":{"line":21,"column":1,"offset":548},"end":{"line":22,"column":16,"offset":604}}}],"position":{"start":{"line":21,"column":1,"offset":548},"end":{"line":22,"column":16,"offset":604}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"문제-특징","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EB%AC%B8%EC%A0%9C-%ED%8A%B9%EC%A7%95","aria-label":"문제 특징 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"문제 특징","position":{"start":{"line":24,"column":4,"offset":609},"end":{"line":24,"column":9,"offset":614}}}],"position":{"start":{"line":24,"column":1,"offset":606},"end":{"line":24,"column":9,"offset":614}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Optimal substructure이 존재한다! 그러므로 Greedy Algorithm으로 접근 가능!","position":{"start":{"line":26,"column":3,"offset":618},"end":{"line":26,"column":61,"offset":676}}}],"position":{"start":{"line":26,"column":1,"offset":616},"end":{"line":26,"column":61,"offset":676}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Negative Cycle이 존재하면 절대 안돼! 왜냐하면 그럼 그 Cycle을 계속 돌면서 음의 무한대로 값이 떨어질 것이기 때문이다!","position":{"start":{"line":27,"column":3,"offset":679},"end":{"line":27,"column":79,"offset":755}}}],"position":{"start":{"line":27,"column":1,"offset":677},"end":{"line":27,"column":79,"offset":755}}},{"type":"text","value":"\n"}],"position":{"start":{"line":26,"column":1,"offset":616},"end":{"line":27,"column":79,"offset":755}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"shortest-path란","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#shortest-path%EB%9E%80","aria-label":"shortest path란 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"shortest path란?","position":{"start":{"line":29,"column":5,"offset":761},"end":{"line":29,"column":20,"offset":776}}}],"position":{"start":{"line":29,"column":1,"offset":757},"end":{"line":29,"column":20,"offset":776}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"S(u,v) <= S(u,x) + S(x, v) 이다.\n즉, 한번 거쳐가는 게 무조건 크거나 같다.","position":{"start":{"line":31,"column":1,"offset":778},"end":{"line":32,"column":25,"offset":833}}}],"position":{"start":{"line":31,"column":1,"offset":778},"end":{"line":32,"column":25,"offset":833}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Shortest path는 Cycle이 없다.","position":{"start":{"line":34,"column":1,"offset":835},"end":{"line":34,"column":26,"offset":860}}}],"position":{"start":{"line":34,"column":1,"offset":835},"end":{"line":34,"column":26,"offset":860}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"single-source-shortest-path","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#single-source-shortest-path","aria-label":"single source shortest path permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Single Source Shortest Path","position":{"start":{"line":36,"column":4,"offset":865},"end":{"line":36,"column":31,"offset":892}}}],"position":{"start":{"line":36,"column":1,"offset":862},"end":{"line":36,"column":31,"offset":892}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"먼저 하나의 Source를 가지는 문제를 풀어보자.","position":{"start":{"line":38,"column":1,"offset":894},"end":{"line":38,"column":29,"offset":922}}}],"position":{"start":{"line":38,"column":1,"offset":894},"end":{"line":38,"column":29,"offset":922}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"1개의 s에 대해서 모든 vertex v로 가는 최단경로를 찾는 문제이다.","position":{"start":{"line":40,"column":3,"offset":926},"end":{"line":40,"column":44,"offset":967}}}],"position":{"start":{"line":40,"column":1,"offset":924},"end":{"line":40,"column":44,"offset":967}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"d[v] = S[s, v]를 의미","position":{"start":{"line":41,"column":3,"offset":970},"end":{"line":41,"column":21,"offset":988}}}],"position":{"start":{"line":41,"column":1,"offset":968},"end":{"line":41,"column":21,"offset":988}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"초기에 d[v]는 무한대인데 알고리즘을 돌면서 값이 줄어들 것이다.","position":{"start":{"line":42,"column":3,"offset":991},"end":{"line":42,"column":40,"offset":1028}}}],"position":{"start":{"line":42,"column":1,"offset":989},"end":{"line":42,"column":40,"offset":1028}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"p[v] = 바로 이전 vertex를 의미한다.","position":{"start":{"line":43,"column":3,"offset":1031},"end":{"line":43,"column":29,"offset":1057}}}],"position":{"start":{"line":43,"column":1,"offset":1029},"end":{"line":43,"column":29,"offset":1057}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"p를 이용해서 shortest-path tree를 만들 수 있다.","position":{"start":{"line":44,"column":3,"offset":1060},"end":{"line":44,"column":39,"offset":1096}}}],"position":{"start":{"line":44,"column":1,"offset":1058},"end":{"line":44,"column":39,"offset":1096}}},{"type":"text","value":"\n"}],"position":{"start":{"line":40,"column":1,"offset":924},"end":{"line":44,"column":39,"offset":1096}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"그럼 이번에는 코드를 봐보자","position":{"start":{"line":46,"column":1,"offset":1098},"end":{"line":46,"column":16,"offset":1113}}}],"position":{"start":{"line":46,"column":1,"offset":1098},"end":{"line":46,"column":16,"offset":1113}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"초기화-코드","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%EC%B4%88%EA%B8%B0%ED%99%94-%EC%BD%94%EB%93%9C","aria-label":"초기화 코드 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"초기화 코드","position":{"start":{"line":48,"column":4,"offset":1118},"end":{"line":48,"column":10,"offset":1124}}}],"position":{"start":{"line":48,"column":1,"offset":1115},"end":{"line":48,"column":10,"offset":1124}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">INIT<span class=\"token operator\">-</span>SINGLE<span class=\"token operator\">-</span><span class=\"token function\">SOURCE</span><span class=\"token punctuation\">(</span>V<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> each v <span class=\"token operator\">&lt;</span><span class=\"token operator\">-</span> V\n        <span class=\"token keyword\">do</span> d<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> INFINITE\n            p<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> NIL\n    d<span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span></code></pre></div>","position":{"start":{"line":50,"column":1,"offset":1126},"end":{"line":56,"column":4,"offset":1244}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"모든 V에 있는 vertext까지의 거리를 무한대로 만들어주고 P를 초기화해준다.\n그리고 시작점인 s의 거리만 0으로 만들어준다.","position":{"start":{"line":58,"column":1,"offset":1246},"end":{"line":59,"column":27,"offset":1318}}}],"position":{"start":{"line":58,"column":1,"offset":1246},"end":{"line":59,"column":27,"offset":1318}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"relaxation짧은-길-찾기","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#relaxation%EC%A7%A7%EC%9D%80-%EA%B8%B8-%EC%B0%BE%EA%B8%B0","aria-label":"relaxation짧은 길 찾기 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Relaxation(짧은 길 찾기)","position":{"start":{"line":61,"column":4,"offset":1323},"end":{"line":61,"column":23,"offset":1342}}}],"position":{"start":{"line":61,"column":1,"offset":1320},"end":{"line":61,"column":23,"offset":1342}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이것이 사실상 핵심이다!! 더 짧은 길이 발견되면 바로 환승하는 과정이다.","position":{"start":{"line":63,"column":1,"offset":1344},"end":{"line":63,"column":42,"offset":1385}}}],"position":{"start":{"line":63,"column":1,"offset":1344},"end":{"line":63,"column":42,"offset":1385}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token function\">Relax</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> d<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> w<span class=\"token punctuation\">)</span>\n        then d<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> d<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>w<span class=\"token punctuation\">;</span>\n                p<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> u<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":65,"column":1,"offset":1387},"end":{"line":71,"column":4,"offset":1491}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"u는 s와 v 사이에 vertex이고 w는 u와 v 사이의 weight이다.","position":{"start":{"line":73,"column":3,"offset":1495},"end":{"line":73,"column":45,"offset":1537}}}],"position":{"start":{"line":73,"column":1,"offset":1493},"end":{"line":73,"column":45,"offset":1537}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"만일 v까지 현재 최단 경로 d[v]보다 d[u]를 거치고 가는게 더 빠르면 환승한다.","position":{"start":{"line":74,"column":3,"offset":1540},"end":{"line":74,"column":51,"offset":1588}}}],"position":{"start":{"line":74,"column":1,"offset":1538},"end":{"line":74,"column":51,"offset":1588}}},{"type":"text","value":"\n"}],"position":{"start":{"line":73,"column":1,"offset":1493},"end":{"line":74,"column":51,"offset":1588}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"bellman-ford-algorithm","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#bellman-ford-algorithm","aria-label":"bellman ford algorithm permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Bellman-Ford algorithm","position":{"start":{"line":76,"column":4,"offset":1593},"end":{"line":76,"column":26,"offset":1615}}}],"position":{"start":{"line":76,"column":1,"offset":1590},"end":{"line":76,"column":26,"offset":1615}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이 알고리즘은 edge weight가 음수여도 할 수 있다.\n그래도 여전히 negative-weight cycle은 안돼!!","position":{"start":{"line":78,"column":1,"offset":1617},"end":{"line":79,"column":36,"offset":1686}}}],"position":{"start":{"line":78,"column":1,"offset":1617},"end":{"line":79,"column":36,"offset":1686}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"일단 코드를 봅시다.","position":{"start":{"line":81,"column":1,"offset":1688},"end":{"line":81,"column":12,"offset":1699}}}],"position":{"start":{"line":81,"column":1,"offset":1688},"end":{"line":81,"column":12,"offset":1699}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">BELLMAN<span class=\"token operator\">-</span><span class=\"token function\">FORD</span><span class=\"token punctuation\">(</span>V<span class=\"token punctuation\">,</span> E<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">)</span>\n<span class=\"token number\">1.</span>  INIT<span class=\"token operator\">-</span>SINGLE<span class=\"token operator\">-</span><span class=\"token function\">SOURCE</span><span class=\"token punctuation\">(</span>V<span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">)</span>\n<span class=\"token number\">2.</span>  <span class=\"token keyword\">for</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span> to <span class=\"token operator\">|</span>V<span class=\"token operator\">|</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n<span class=\"token number\">3.</span>      <span class=\"token keyword\">do</span> <span class=\"token keyword\">for</span> each <span class=\"token function\">edge</span> <span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">-</span> E\n<span class=\"token number\">4.</span>          <span class=\"token keyword\">do</span> <span class=\"token function\">RELAX</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">)</span>\n<span class=\"token number\">5.</span>  <span class=\"token keyword\">for</span> each <span class=\"token function\">edge</span> <span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">-</span> E\n<span class=\"token number\">6.</span>      <span class=\"token keyword\">do</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> d<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token function\">w</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token number\">7.</span>          then <span class=\"token keyword\">return</span> FALSE\n<span class=\"token number\">8.</span>  <span class=\"token keyword\">return</span> TRUE</code></pre></div>","position":{"start":{"line":83,"column":1,"offset":1701},"end":{"line":93,"column":4,"offset":1964}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Line 1 : 초기화","position":{"start":{"line":95,"column":3,"offset":1968},"end":{"line":95,"column":15,"offset":1980}}}],"position":{"start":{"line":95,"column":1,"offset":1966},"end":{"line":95,"column":15,"offset":1980}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Line 2 : vertex 수 - 1 번 반복해","position":{"start":{"line":96,"column":3,"offset":1983},"end":{"line":96,"column":30,"offset":2010}}}],"position":{"start":{"line":96,"column":1,"offset":1981},"end":{"line":96,"column":30,"offset":2010}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Line 3,4 : edge를 하나씩 꺼내가지고 Relax시켜","position":{"start":{"line":97,"column":3,"offset":2013},"end":{"line":97,"column":37,"offset":2047}}}],"position":{"start":{"line":97,"column":1,"offset":2011},"end":{"line":97,"column":37,"offset":2047}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Line 5,6 : 또 edge에서 하나씩 꺼내서 Relax시켜봐","position":{"start":{"line":98,"column":3,"offset":2050},"end":{"line":98,"column":39,"offset":2086}}}],"position":{"start":{"line":98,"column":1,"offset":2048},"end":{"line":98,"column":39,"offset":2086}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"Line 7,8 : Relax 또 되면 negative cycle이 있는거여 return False","position":{"start":{"line":99,"column":3,"offset":2089},"end":{"line":99,"column":58,"offset":2144}}}],"position":{"start":{"line":99,"column":1,"offset":2087},"end":{"line":99,"column":58,"offset":2144}}},{"type":"text","value":"\n"}],"position":{"start":{"line":95,"column":1,"offset":1966},"end":{"line":99,"column":58,"offset":2144}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이 코드는 모든 E를 훑는 과정을 V-1번 반복하기 때문에 시간은 O(VE) 가 걸린다.","position":{"start":{"line":101,"column":1,"offset":2146},"end":{"line":101,"column":50,"offset":2195}}}],"position":{"start":{"line":101,"column":1,"offset":2146},"end":{"line":101,"column":50,"offset":2195}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"in-dagdirected-acycling-graph","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#in-dagdirected-acycling-graph","aria-label":"in dagdirected acycling graph permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"in DAG(Directed Acycling Graph)","position":{"start":{"line":103,"column":4,"offset":2200},"end":{"line":103,"column":35,"offset":2231}}}],"position":{"start":{"line":103,"column":1,"offset":2197},"end":{"line":103,"column":35,"offset":2231}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"사이클이 없다는 전제하에 이 알고리즘을 쓸 수 있다.\nTopological sort를 이용하면 Bellman-Ford의 V-1번 반복하는 과정을 하나로 줄일 수 있다.","position":{"start":{"line":105,"column":1,"offset":2233},"end":{"line":106,"column":64,"offset":2326}}}],"position":{"start":{"line":105,"column":1,"offset":2233},"end":{"line":106,"column":64,"offset":2326}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">DAG<span class=\"token operator\">-</span>SHORTEST<span class=\"token operator\">-</span><span class=\"token function\">PATHS</span><span class=\"token punctuation\">(</span>V<span class=\"token punctuation\">,</span>E<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">)</span>\n    topologically sort the vertices\n    INIT<span class=\"token operator\">-</span>SINGLE<span class=\"token operator\">-</span><span class=\"token function\">SOURCE</span><span class=\"token punctuation\">(</span>V<span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> each vertex u<span class=\"token punctuation\">,</span> take in topologically sorted order\n        <span class=\"token keyword\">do</span> <span class=\"token keyword\">for</span> each vertex v <span class=\"token operator\">&lt;</span><span class=\"token operator\">-</span> Adj<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span>\n            <span class=\"token keyword\">do</span> <span class=\"token function\">RELAX</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":108,"column":1,"offset":2328},"end":{"line":115,"column":4,"offset":2555}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이렇게 진행하면 타임이 O(V+E)로 확 줄게 된다!!","position":{"start":{"line":117,"column":1,"offset":2557},"end":{"line":117,"column":31,"offset":2587}}}],"position":{"start":{"line":117,"column":1,"offset":2557},"end":{"line":117,"column":31,"offset":2587}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"잠깐!! 여기서 Topological Sort 뭔지 정확히 집고 넘어가자.","position":{"start":{"line":119,"column":1,"offset":2589},"end":{"line":119,"column":42,"offset":2630}}}],"position":{"start":{"line":119,"column":1,"offset":2589},"end":{"line":119,"column":42,"offset":2630}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"topological-sort","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#topological-sort","aria-label":"topological sort permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Topological Sort","position":{"start":{"line":121,"column":5,"offset":2636},"end":{"line":121,"column":21,"offset":2652}}}],"position":{"start":{"line":121,"column":1,"offset":2632},"end":{"line":121,"column":21,"offset":2652}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"DFS를 이용해서 모든 vertex의 Finish Time을 다 구한 다음에 Finish Time이 큰 순서대로 Sorting하는 거를 말한다.","position":{"start":{"line":123,"column":1,"offset":2654},"end":{"line":123,"column":81,"offset":2734}}}],"position":{"start":{"line":123,"column":1,"offset":2654},"end":{"line":123,"column":81,"offset":2734}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"옷 입는 순서와 같이 앞에 꺼가 끝나지 않으면 일이 진행되지 않을 때 일의 순서를 정하는데 사용된다.","position":{"start":{"line":125,"column":1,"offset":2736},"end":{"line":125,"column":57,"offset":2792}}}],"position":{"start":{"line":125,"column":1,"offset":2736},"end":{"line":125,"column":57,"offset":2792}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{"id":"dijkstra-algorithm다익스트라-알고리즘","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#dijkstra-algorithm%EB%8B%A4%EC%9D%B5%EC%8A%A4%ED%8A%B8%EB%9D%BC-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98","aria-label":"dijkstra algorithm다익스트라 알고리즘 permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"Dijkstra Algorithm(다익스트라 알고리즘)","position":{"start":{"line":127,"column":4,"offset":2797},"end":{"line":127,"column":34,"offset":2827}}}],"position":{"start":{"line":127,"column":1,"offset":2794},"end":{"line":127,"column":34,"offset":2827}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"negative edge가 없는 경우에만 사용된다.","position":{"start":{"line":129,"column":3,"offset":2831},"end":{"line":129,"column":31,"offset":2859}}}],"position":{"start":{"line":129,"column":1,"offset":2829},"end":{"line":129,"column":31,"offset":2859}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"BFS를 이용해서 vertex를 priority queue(pq)에 넣고 tree를 확장해나간다.","position":{"start":{"line":130,"column":3,"offset":2862},"end":{"line":130,"column":57,"offset":2916}}}],"position":{"start":{"line":130,"column":1,"offset":2860},"end":{"line":130,"column":57,"offset":2916}}},{"type":"text","value":"\n"}],"position":{"start":{"line":129,"column":1,"offset":2829},"end":{"line":130,"column":57,"offset":2916}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"2개의 Vertex set이 존재해서 S는 최종, Q는 vertex가 담겨져있는 pq이다.\nQ에서 하나씩 꺼내기를 반복하면서 최단거리를 찾고 꺼낸 vertex를 S에 넣는다.","position":{"start":{"line":132,"column":1,"offset":2918},"end":{"line":133,"column":47,"offset":3015}}}],"position":{"start":{"line":132,"column":1,"offset":2918},"end":{"line":133,"column":47,"offset":3015}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token function\">DIJKSTRA</span><span class=\"token punctuation\">(</span>G<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">)</span>\n<span class=\"token number\">1.</span>  INIT<span class=\"token operator\">-</span>SINGLE<span class=\"token operator\">-</span><span class=\"token function\">SOURCE</span><span class=\"token punctuation\">(</span>G<span class=\"token punctuation\">,</span>s<span class=\"token punctuation\">)</span>\n<span class=\"token number\">2.</span>  S <span class=\"token operator\">&lt;</span><span class=\"token operator\">-</span> <span class=\"token constant\">NULL</span>\n<span class=\"token number\">3.</span>  Q <span class=\"token operator\">&lt;</span><span class=\"token operator\">-</span> V<span class=\"token punctuation\">[</span>G<span class=\"token punctuation\">]</span>\n<span class=\"token number\">4.</span>  <span class=\"token keyword\">while</span> Q <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span>\n<span class=\"token number\">5.</span>  <span class=\"token keyword\">do</span> u <span class=\"token operator\">&lt;</span><span class=\"token operator\">-</span> EXTRACT<span class=\"token operator\">-</span><span class=\"token function\">MIN</span><span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">)</span>\n<span class=\"token number\">6.</span>      S <span class=\"token operator\">&lt;</span><span class=\"token operator\">-</span> S <span class=\"token operator\">+</span> U\n<span class=\"token number\">7.</span>      <span class=\"token keyword\">for</span> each vertex v <span class=\"token operator\">&lt;</span><span class=\"token operator\">-</span> Adj<span class=\"token punctuation\">[</span>u<span class=\"token punctuation\">]</span>\n<span class=\"token number\">8.</span>          <span class=\"token keyword\">do</span> <span class=\"token function\">RELAX</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">,</span>v<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">)</span></code></pre></div>","position":{"start":{"line":135,"column":1,"offset":3017},"end":{"line":145,"column":4,"offset":3229}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"즉, pq에서 하나씩 꺼내면서 꺼낸 vertex와 근접한 원소를 relax시켜주고 꺼낸 원소를 S에 넣는다.","position":{"start":{"line":147,"column":1,"offset":3231},"end":{"line":147,"column":61,"offset":3291}}}],"position":{"start":{"line":147,"column":1,"offset":3231},"end":{"line":147,"column":61,"offset":3291}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":148,"column":1,"offset":3292}}}}