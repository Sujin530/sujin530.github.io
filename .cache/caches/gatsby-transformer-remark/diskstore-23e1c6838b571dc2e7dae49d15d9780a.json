{"expireTime":9007200896903336000,"key":"transformer-remark-markdown-ast-547cf9a59489cbf99d39adec199117c5-gatsby-remark-imagesgatsby-remark-table-of-contentsgatsby-remark-prismjsgatsby-remark-autolink-headersgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"heading","depth":2,"children":[{"type":"link","url":"#위상-정렬topological-sort이란","title":null,"children":[],"data":{"hProperties":{"aria-label":"위상 정렬topological sort이란 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"위상 정렬(Topological Sort)이란?","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":30,"offset":30}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":30,"offset":30}},"data":{"id":"위상-정렬topological-sort이란","htmlAttributes":{"id":"위상-정렬topological-sort이란"},"hProperties":{"id":"위상-정렬topological-sort이란","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"여태까지 정렬 기준이 였다면 **위상정렬의 정렬 기준은 ‘위상’**이다.\n여기서 ","position":{"start":{"line":4,"column":1,"offset":32},"end":{"line":5,"column":5,"offset":77}}},{"type":"strong","children":[{"type":"text","value":"위상이란 incoming edge의 수","position":{"start":{"line":5,"column":7,"offset":79},"end":{"line":5,"column":28,"offset":100}}}],"position":{"start":{"line":5,"column":5,"offset":77},"end":{"line":5,"column":30,"offset":102}}},{"type":"text","value":"를 의미한다.","position":{"start":{"line":5,"column":30,"offset":102},"end":{"line":5,"column":37,"offset":109}}}],"position":{"start":{"line":4,"column":1,"offset":32},"end":{"line":5,"column":37,"offset":109}}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"위상 정렬은 Directed Acyclic Graph(DAG)에서만 가능한 정렬방법이다.","position":{"start":{"line":7,"column":3,"offset":113},"end":{"line":7,"column":52,"offset":162}}}],"position":{"start":{"line":7,"column":3,"offset":113},"end":{"line":7,"column":52,"offset":162}}}],"position":{"start":{"line":7,"column":1,"offset":111},"end":{"line":7,"column":52,"offset":162}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"DAG란 각 edge가 방향을 가지고 있는데 cycle이 발생하지 않는 경우를 말한다.","position":{"start":{"line":8,"column":3,"offset":165},"end":{"line":8,"column":51,"offset":213}}}],"position":{"start":{"line":8,"column":3,"offset":165},"end":{"line":8,"column":51,"offset":213}}}],"position":{"start":{"line":8,"column":1,"offset":163},"end":{"line":8,"column":51,"offset":213}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"Cycle이 있으면 무한 루프를 발생시킬 것이다!!","position":{"start":{"line":9,"column":5,"offset":218},"end":{"line":9,"column":33,"offset":246}}}],"position":{"start":{"line":9,"column":3,"offset":216},"end":{"line":9,"column":35,"offset":248}}}],"position":{"start":{"line":9,"column":3,"offset":216},"end":{"line":9,"column":35,"offset":248}}}],"position":{"start":{"line":9,"column":1,"offset":214},"end":{"line":9,"column":35,"offset":248}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"보통 일의 순서를 정하는 알고리즘에서 많이 사용된다.","position":{"start":{"line":10,"column":3,"offset":251},"end":{"line":10,"column":32,"offset":280}}}],"position":{"start":{"line":10,"column":3,"offset":251},"end":{"line":10,"column":32,"offset":280}}}],"position":{"start":{"line":10,"column":1,"offset":249},"end":{"line":10,"column":32,"offset":280}}}],"position":{"start":{"line":7,"column":1,"offset":111},"end":{"line":10,"column":32,"offset":280}}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#topological-sorting-알고리즘","title":null,"children":[],"data":{"hProperties":{"aria-label":"topological sorting 알고리즘 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Topological Sorting 알고리즘","position":{"start":{"line":12,"column":4,"offset":285},"end":{"line":12,"column":28,"offset":309}}}],"position":{"start":{"line":12,"column":1,"offset":282},"end":{"line":12,"column":28,"offset":309}},"data":{"id":"topological-sorting-알고리즘","htmlAttributes":{"id":"topological-sorting-알고리즘"},"hProperties":{"id":"topological-sorting-알고리즘","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"알고리즘의 과정은 다음과 같다.","position":{"start":{"line":14,"column":1,"offset":311},"end":{"line":14,"column":18,"offset":328}}}],"position":{"start":{"line":14,"column":1,"offset":311},"end":{"line":14,"column":18,"offset":328}}},{"type":"list","ordered":true,"start":1,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"각 vertex의 위상(incoming edge의 수)를 저장한다.","position":{"start":{"line":16,"column":4,"offset":333},"end":{"line":16,"column":41,"offset":370}}}],"position":{"start":{"line":16,"column":4,"offset":333},"end":{"line":16,"column":41,"offset":370}}}],"position":{"start":{"line":16,"column":1,"offset":330},"end":{"line":16,"column":41,"offset":370}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"정점(위상이 0인 노드)을 다 큐에 넣어준다.","position":{"start":{"line":17,"column":4,"offset":374},"end":{"line":17,"column":29,"offset":399}}}],"position":{"start":{"line":17,"column":4,"offset":374},"end":{"line":17,"column":29,"offset":399}}}],"position":{"start":{"line":17,"column":1,"offset":371},"end":{"line":17,"column":29,"offset":399}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"큐에서 노드를 하나씩 꺼내서 위상정렬에 넣어준다.","position":{"start":{"line":18,"column":4,"offset":403},"end":{"line":18,"column":31,"offset":430}}}],"position":{"start":{"line":18,"column":4,"offset":403},"end":{"line":18,"column":31,"offset":430}}}],"position":{"start":{"line":18,"column":1,"offset":400},"end":{"line":18,"column":31,"offset":430}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"꺼낸 노드와 연결된 노드의 위상을 하나씩 낮춰주고 엣지를 없애준다.","position":{"start":{"line":19,"column":4,"offset":434},"end":{"line":19,"column":41,"offset":471}}}],"position":{"start":{"line":19,"column":4,"offset":434},"end":{"line":19,"column":41,"offset":471}}}],"position":{"start":{"line":19,"column":1,"offset":431},"end":{"line":19,"column":41,"offset":471}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"위상이 0인 노드를 큐에 다시 넣어준다.","position":{"start":{"line":20,"column":4,"offset":475},"end":{"line":20,"column":26,"offset":497}}}],"position":{"start":{"line":20,"column":4,"offset":475},"end":{"line":20,"column":26,"offset":497}}}],"position":{"start":{"line":20,"column":1,"offset":472},"end":{"line":20,"column":26,"offset":497}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"3번부터 5번을 큐가 빌 때까지 반복한다.","position":{"start":{"line":21,"column":4,"offset":501},"end":{"line":21,"column":27,"offset":524}}}],"position":{"start":{"line":21,"column":4,"offset":501},"end":{"line":21,"column":27,"offset":524}}}],"position":{"start":{"line":21,"column":1,"offset":498},"end":{"line":21,"column":27,"offset":524}}}],"position":{"start":{"line":16,"column":1,"offset":330},"end":{"line":21,"column":27,"offset":524}}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#예시","title":null,"children":[],"data":{"hProperties":{"aria-label":"예시 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"예시","position":{"start":{"line":23,"column":4,"offset":529},"end":{"line":23,"column":6,"offset":531}}}],"position":{"start":{"line":23,"column":1,"offset":526},"end":{"line":23,"column":6,"offset":531}},"data":{"id":"예시","htmlAttributes":{"id":"예시"},"hProperties":{"id":"예시","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"다음과 같은 그래프에 대해 위상 정렬을 진행해보자.","position":{"start":{"line":25,"column":1,"offset":533},"end":{"line":25,"column":29,"offset":561}}}],"position":{"start":{"line":25,"column":1,"offset":533},"end":{"line":25,"column":29,"offset":561}}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#위상-0인-친구-큐에-넣기","title":null,"children":[],"data":{"hProperties":{"aria-label":"위상 0인 친구 큐에 넣기 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"위상 0인 친구 큐에 넣기","position":{"start":{"line":27,"column":5,"offset":567},"end":{"line":27,"column":19,"offset":581}}}],"position":{"start":{"line":27,"column":1,"offset":563},"end":{"line":27,"column":19,"offset":581}},"data":{"id":"위상-0인-친구-큐에-넣기","htmlAttributes":{"id":"위상-0인-친구-큐에-넣기"},"hProperties":{"id":"위상-0인-친구-큐에-넣기","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/zoomKoding/zoomKoding.github.io/source/assets/_posts/topological-sort-0.png","alt":"사진","position":{"start":{"line":29,"column":1,"offset":583},"end":{"line":29,"column":117,"offset":699}}}],"position":{"start":{"line":29,"column":1,"offset":583},"end":{"line":29,"column":117,"offset":699}}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#큐에서-1-꺼내기","title":null,"children":[],"data":{"hProperties":{"aria-label":"큐에서 1 꺼내기 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"큐에서 1 꺼내기","position":{"start":{"line":31,"column":5,"offset":705},"end":{"line":31,"column":14,"offset":714}}}],"position":{"start":{"line":31,"column":1,"offset":701},"end":{"line":31,"column":14,"offset":714}},"data":{"id":"큐에서-1-꺼내기","htmlAttributes":{"id":"큐에서-1-꺼내기"},"hProperties":{"id":"큐에서-1-꺼내기","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/zoomKoding/zoomKoding.github.io/source/assets/_posts/topological-sort-1.png","alt":"사진","position":{"start":{"line":33,"column":1,"offset":716},"end":{"line":33,"column":117,"offset":832}}}],"position":{"start":{"line":33,"column":1,"offset":716},"end":{"line":33,"column":117,"offset":832}}},{"type":"paragraph","children":[{"type":"text","value":"이 때는 위상이 0인 친구가 없으므로 큐에 아무 값도 들어가지 않는다.","position":{"start":{"line":35,"column":1,"offset":834},"end":{"line":35,"column":40,"offset":873}}}],"position":{"start":{"line":35,"column":1,"offset":834},"end":{"line":35,"column":40,"offset":873}}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#큐에서-3-꺼내기","title":null,"children":[],"data":{"hProperties":{"aria-label":"큐에서 3 꺼내기 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"큐에서 3 꺼내기","position":{"start":{"line":37,"column":5,"offset":879},"end":{"line":37,"column":14,"offset":888}}}],"position":{"start":{"line":37,"column":1,"offset":875},"end":{"line":37,"column":14,"offset":888}},"data":{"id":"큐에서-3-꺼내기","htmlAttributes":{"id":"큐에서-3-꺼내기"},"hProperties":{"id":"큐에서-3-꺼내기","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/zoomKoding/zoomKoding.github.io/source/assets/_posts/topological-sort-2.png","alt":"사진","position":{"start":{"line":39,"column":1,"offset":890},"end":{"line":39,"column":117,"offset":1006}}}],"position":{"start":{"line":39,"column":1,"offset":890},"end":{"line":39,"column":117,"offset":1006}}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#큐에서-2-꺼내기","title":null,"children":[],"data":{"hProperties":{"aria-label":"큐에서 2 꺼내기 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"큐에서 2 꺼내기","position":{"start":{"line":41,"column":5,"offset":1012},"end":{"line":41,"column":14,"offset":1021}}}],"position":{"start":{"line":41,"column":1,"offset":1008},"end":{"line":41,"column":14,"offset":1021}},"data":{"id":"큐에서-2-꺼내기","htmlAttributes":{"id":"큐에서-2-꺼내기"},"hProperties":{"id":"큐에서-2-꺼내기","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/zoomKoding/zoomKoding.github.io/source/assets/_posts/topological-sort-3.png","alt":"사진","position":{"start":{"line":43,"column":1,"offset":1023},"end":{"line":43,"column":117,"offset":1139}}}],"position":{"start":{"line":43,"column":1,"offset":1023},"end":{"line":43,"column":117,"offset":1139}}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"이제 큐에 아무것도 없으므로 최종 위상 정렬된 결과(1,3,2,4)를 얻을 수 있다.","position":{"start":{"line":45,"column":3,"offset":1143},"end":{"line":45,"column":50,"offset":1190}}}],"position":{"start":{"line":45,"column":1,"offset":1141},"end":{"line":45,"column":52,"offset":1192}}}],"position":{"start":{"line":45,"column":1,"offset":1141},"end":{"line":45,"column":52,"offset":1192}}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#위상정렬-관련-문제-백준-2252번-줄세우기","title":null,"children":[],"data":{"hProperties":{"aria-label":"위상정렬 관련 문제 백준 2252번 줄세우기 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"위상정렬 관련 문제 (백준 2252번 줄세우기)","position":{"start":{"line":47,"column":4,"offset":1197},"end":{"line":47,"column":30,"offset":1223}}}],"position":{"start":{"line":47,"column":1,"offset":1194},"end":{"line":47,"column":30,"offset":1223}},"data":{"id":"위상정렬-관련-문제-백준-2252번-줄세우기","htmlAttributes":{"id":"위상정렬-관련-문제-백준-2252번-줄세우기"},"hProperties":{"id":"위상정렬-관련-문제-백준-2252번-줄세우기","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.acmicpc.net/problem/2252","children":[{"type":"text","value":"백준 2252번 줄세우기 링크","position":{"start":{"line":49,"column":2,"offset":1226},"end":{"line":49,"column":18,"offset":1242}}}],"position":{"start":{"line":49,"column":1,"offset":1225},"end":{"line":49,"column":57,"offset":1281}}}],"position":{"start":{"line":49,"column":1,"offset":1225},"end":{"line":49,"column":57,"offset":1281}}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#링크드-리스트-사용","title":null,"children":[],"data":{"hProperties":{"aria-label":"링크드 리스트 사용 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"링크드 리스트 사용","position":{"start":{"line":51,"column":5,"offset":1287},"end":{"line":51,"column":15,"offset":1297}}}],"position":{"start":{"line":51,"column":1,"offset":1283},"end":{"line":51,"column":15,"offset":1297}},"data":{"id":"링크드-리스트-사용","htmlAttributes":{"id":"링크드-리스트-사용"},"hProperties":{"id":"링크드-리스트-사용","style":"position:relative;"}}},{"type":"html","lang":"cpp","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cstdio></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;queue></span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span><span class=\"token operator\">*</span> in<span class=\"token punctuation\">;</span>\nqueue<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> q<span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">Node</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> data<span class=\"token punctuation\">;</span>\n    Node<span class=\"token operator\">*</span> next<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span> prev<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">Node</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        next <span class=\"token operator\">=</span> prev <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span>\n        data <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token function\">Node</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> Node<span class=\"token operator\">*</span> ptr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        data <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\n        prev <span class=\"token operator\">=</span> ptr<span class=\"token punctuation\">;</span>\n        next <span class=\"token operator\">=</span> ptr<span class=\"token operator\">-></span>next<span class=\"token punctuation\">;</span>\n        next<span class=\"token operator\">-></span>prev <span class=\"token operator\">=</span> prev<span class=\"token operator\">-></span>next <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">LinkedList</span> <span class=\"token punctuation\">{</span>\n    Node <span class=\"token operator\">*</span>head<span class=\"token punctuation\">;</span>\n    Node <span class=\"token operator\">*</span>tail<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">LinkedList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        head <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">Node</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        tail <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">Node</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        head<span class=\"token operator\">-></span>next <span class=\"token operator\">=</span> tail<span class=\"token punctuation\">;</span>\n        tail<span class=\"token operator\">-></span>prev <span class=\"token operator\">=</span> head<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">new</span> <span class=\"token function\">Node</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> tail<span class=\"token operator\">-></span>prev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> N<span class=\"token punctuation\">,</span> M<span class=\"token punctuation\">,</span> v1<span class=\"token punctuation\">,</span> v2<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>N<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>M<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    LinkedList <span class=\"token operator\">*</span><span class=\"token operator\">*</span>list <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> LinkedList<span class=\"token operator\">*</span><span class=\"token punctuation\">[</span>N<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> N <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>list<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token function\">LinkedList</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>N<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> N <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>in<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> M<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v1<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        list<span class=\"token punctuation\">[</span>v1<span class=\"token punctuation\">]</span><span class=\"token operator\">-></span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span>v2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        in<span class=\"token punctuation\">[</span>v2<span class=\"token punctuation\">]</span> <span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span>N<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d \"</span><span class=\"token punctuation\">,</span> temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        q<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        Node<span class=\"token operator\">*</span> tmp <span class=\"token operator\">=</span> list<span class=\"token punctuation\">[</span>temp<span class=\"token punctuation\">]</span><span class=\"token operator\">-></span>head<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>tmp<span class=\"token operator\">-></span>next <span class=\"token operator\">!=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            in<span class=\"token punctuation\">[</span>tmp<span class=\"token operator\">-></span>data<span class=\"token punctuation\">]</span> <span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span>tmp<span class=\"token operator\">-></span>data<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>tmp<span class=\"token operator\">-></span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            tmp <span class=\"token operator\">=</span> tmp<span class=\"token operator\">-></span>next<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":53,"column":1,"offset":1299},"end":{"line":121,"column":4,"offset":2643}}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#이중-벡터를-이용한-코드","title":null,"children":[],"data":{"hProperties":{"aria-label":"이중 벡터를 이용한 코드 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"이중 벡터를 이용한 코드","position":{"start":{"line":123,"column":5,"offset":2649},"end":{"line":123,"column":18,"offset":2662}}}],"position":{"start":{"line":123,"column":1,"offset":2645},"end":{"line":123,"column":18,"offset":2662}},"data":{"id":"이중-벡터를-이용한-코드","htmlAttributes":{"id":"이중-벡터를-이용한-코드"},"hProperties":{"id":"이중-벡터를-이용한-코드","style":"position:relative;"}}},{"type":"html","lang":"cpp","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;cstdio></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;queue></span></span>\n<span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;vector></span></span>\n\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span><span class=\"token operator\">*</span> in<span class=\"token punctuation\">;</span>\nqueue<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> q<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">int</span> N<span class=\"token punctuation\">,</span> M<span class=\"token punctuation\">,</span> v1<span class=\"token punctuation\">,</span> v2<span class=\"token punctuation\">;</span>\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>N<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>M<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    vector<span class=\"token operator\">&lt;</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span> <span class=\"token operator\">></span> v<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> N <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>v<span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span><span class=\"token generic-function\"><span class=\"token function\">vector</span><span class=\"token generic class-name\"><span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    in <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span>N<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> N <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>in<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> M<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v1<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>v2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        v<span class=\"token punctuation\">[</span>v1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">push_back</span><span class=\"token punctuation\">(</span>v2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        in<span class=\"token punctuation\">[</span>v2<span class=\"token punctuation\">]</span> <span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span>N<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>in<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">empty</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">int</span> temp <span class=\"token operator\">=</span> q<span class=\"token punctuation\">.</span><span class=\"token function\">front</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d \"</span><span class=\"token punctuation\">,</span> temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        q<span class=\"token punctuation\">.</span><span class=\"token function\">pop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> v<span class=\"token punctuation\">[</span>temp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">--</span>in<span class=\"token punctuation\">[</span>v<span class=\"token punctuation\">[</span>temp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>q<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">[</span>temp<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":125,"column":1,"offset":2664},"end":{"line":160,"column":4,"offset":3412}}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#결과","title":null,"children":[],"data":{"hProperties":{"aria-label":"결과 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"결과","position":{"start":{"line":162,"column":5,"offset":3418},"end":{"line":162,"column":7,"offset":3420}}}],"position":{"start":{"line":162,"column":1,"offset":3414},"end":{"line":162,"column":7,"offset":3420}},"data":{"id":"결과","htmlAttributes":{"id":"결과"},"hProperties":{"id":"결과","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"image","title":null,"url":"https://raw.githubusercontent.com/zoomKoding/zoomKoding.github.io/source/assets/_posts/topological-sort-4.png","alt":"사진","position":{"start":{"line":164,"column":1,"offset":3422},"end":{"line":164,"column":117,"offset":3538}}}],"position":{"start":{"line":164,"column":1,"offset":3422},"end":{"line":164,"column":117,"offset":3538}}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"text","value":"이중 벡터 써도 각 벡터마다 사이즈를 달리할 수 있다. 그렇다면 확실히 따로 링크드 리스트 쓰는 것보다 그냥 벡터를 쓰는 게 좋다!!","position":{"start":{"line":166,"column":3,"offset":3542},"end":{"line":166,"column":77,"offset":3616}}}],"position":{"start":{"line":166,"column":1,"offset":3540},"end":{"line":166,"column":79,"offset":3618}}}],"position":{"start":{"line":166,"column":1,"offset":3540},"end":{"line":166,"column":79,"offset":3618}}},{"type":"heading","depth":2,"children":[{"type":"link","url":"#느낀점","title":null,"children":[],"data":{"hProperties":{"aria-label":"느낀점 permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"느낀점","position":{"start":{"line":168,"column":4,"offset":3623},"end":{"line":168,"column":7,"offset":3626}}}],"position":{"start":{"line":168,"column":1,"offset":3620},"end":{"line":168,"column":7,"offset":3626}},"data":{"id":"느낀점","htmlAttributes":{"id":"느낀점"},"hProperties":{"id":"느낀점","style":"position:relative;"}}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"정리하기 전까지 왜 위상정렬이 일의 순위를 정해주는 줄 몰랐다.","position":{"start":{"line":170,"column":3,"offset":3630},"end":{"line":170,"column":38,"offset":3665}}}],"position":{"start":{"line":170,"column":3,"offset":3630},"end":{"line":170,"column":38,"offset":3665}}}],"position":{"start":{"line":170,"column":1,"offset":3628},"end":{"line":170,"column":38,"offset":3665}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"위상정렬은 의존성이 없는 일부터 시작해서 의존성이 낮은 애들부터 하나씩 처리해가는 알고리즘이다.","position":{"start":{"line":171,"column":3,"offset":3668},"end":{"line":171,"column":56,"offset":3721}}}],"position":{"start":{"line":171,"column":3,"offset":3668},"end":{"line":171,"column":56,"offset":3721}}}],"position":{"start":{"line":171,"column":1,"offset":3666},"end":{"line":171,"column":56,"offset":3721}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"나중에 분명히 쓰일 일이 있을텐데 공부할 수 있게 되서 좋았다 ㅎㅎ","position":{"start":{"line":172,"column":3,"offset":3724},"end":{"line":172,"column":40,"offset":3761}}}],"position":{"start":{"line":172,"column":3,"offset":3724},"end":{"line":172,"column":40,"offset":3761}}}],"position":{"start":{"line":172,"column":1,"offset":3722},"end":{"line":172,"column":40,"offset":3761}}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"위상정렬 모르면 못풀 문제들이 있을거 같다. 이제는 무서워 하지 말고 달려보자 ㅎㅎ","position":{"start":{"line":173,"column":3,"offset":3764},"end":{"line":173,"column":49,"offset":3810}}}],"position":{"start":{"line":173,"column":3,"offset":3764},"end":{"line":173,"column":49,"offset":3810}}}],"position":{"start":{"line":173,"column":1,"offset":3762},"end":{"line":173,"column":49,"offset":3810}}}],"position":{"start":{"line":170,"column":1,"offset":3628},"end":{"line":173,"column":49,"offset":3810}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":174,"column":1,"offset":3811}}}}