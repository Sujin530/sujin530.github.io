{"expireTime":9007200896903338000,"key":"transformer-remark-markdown-html-c5054e91c4c61c895036c90e02a3b64b-gatsby-remark-imagesgatsby-remark-table-of-contentsgatsby-remark-prismjsgatsby-remark-autolink-headersgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":"<h2 id=\"-tdd란\" style=\"position:relative;\"><a href=\"#-tdd%EB%9E%80\" aria-label=\" tdd란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧪 TDD란</h2>\n<p>Test Driven Development : 말그대로 <strong>테스트가 이끌어 나가는 개발을 의미</strong>한다.</p>\n<p>개발을 진행하기 앞서 테스트를 먼저 만들거 테스트를 통과하기 위한 것들을 구현한다.</p>\n<h2 id=\"-참고글\" style=\"position:relative;\"><a href=\"#-%EC%B0%B8%EA%B3%A0%EA%B8%80\" aria-label=\" 참고글 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>📒 참고글</h2>\n<p><a href=\"https://gmlwjd9405.github.io/2018/06/03/agile-tdd.html\">[Agile] TDD(테스트 주도 개발)란</a></p>\n<p><a href=\"https://medium.com/@cmygray/%EB%B2%88%EC%97%AD-%EC%89%AC%EC%9A%B4-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%A3%BC%EB%8F%84-%EA%B0%9C%EB%B0%9C%EA%B3%BC-%EB%8B%A8%EC%9C%84-%ED%85%8C%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EC%9C%84%ED%95%9C-5%EB%8B%A8%EA%B3%84-%EB%B0%A9%EB%B2%95%EB%A1%A0-b82fea6c8d90\">[번역]쉬운 테스트 주도 개발과 단위 테스트를 위한 5단계 방법론</a></p>\n<h2 id=\"-tdd는-언제-해야할까\" style=\"position:relative;\"><a href=\"#-tdd%EB%8A%94-%EC%96%B8%EC%A0%9C-%ED%95%B4%EC%95%BC%ED%95%A0%EA%B9%8C\" aria-label=\" tdd는 언제 해야할까 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>❓ TDD는 언제 해야할까?</h2>\n<p>처음해보는 프로그램 주제일 때(나의 불확실성)</p>\n<p>고객 요구조건이 바뀔 수 있는 프로젝트인 경우(외부적인 불확실성)</p>\n<p>즉 불확실성이 높으면 테스트를 짠다.</p>\n<p>결과가 명확하다면 TDD를 적용하지 않는게 좋다.</p>\n<h2 id=\"-tdd를-잘하는-법\" style=\"position:relative;\"><a href=\"#-tdd%EB%A5%BC-%EC%9E%98%ED%95%98%EB%8A%94-%EB%B2%95\" aria-label=\" tdd를 잘하는 법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🤩 TDD를 잘하는 법</h2>\n<ol>\n<li>도구나 규칙에 집착하지 말아라(TDD는 어떤 도구가 아니다.)</li>\n<li>상황에 맞게 적응적으로 진화적으로 접근하라\n<ol>\n<li>어떻게 하면 피드백을 더 많이 받을까를 계속해서 고민해보라</li>\n<li>테스트 자체가 처음부터 완벽할 수 없다!</li>\n<li>상황에 맞게 반복적으로 개선해나가자</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"-테스트-코드를-잘-짜는-사고법\" style=\"position:relative;\"><a href=\"#-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C%EB%A5%BC-%EC%9E%98-%EC%A7%9C%EB%8A%94-%EC%82%AC%EA%B3%A0%EB%B2%95\" aria-label=\" 테스트 코드를 잘 짜는 사고법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>🧠 테스트 코드를 잘 짜는 사고법</h2>\n<p><strong>비밀번호 강도 측정</strong>이라는 예를 통해 과정을 살펴보자</p>\n<h3 id=\"1-입력-출력-결정하기\" style=\"position:relative;\"><a href=\"#1-%EC%9E%85%EB%A0%A5-%EC%B6%9C%EB%A0%A5-%EA%B2%B0%EC%A0%95%ED%95%98%EA%B8%B0\" aria-label=\"1 입력 출력 결정하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 입력 출력 결정하기</h3>\n<p>구현을 고려하기 전에 입출력부터 생각해보자.</p>\n<ul>\n<li>입력값: 비밀번호</li>\n<li>출력값: Boolean(강도가 세면 true 아니면 false)</li>\n</ul>\n<h3 id=\"2-함수-시그니처-선택하기\" style=\"position:relative;\"><a href=\"#2-%ED%95%A8%EC%88%98-%EC%8B%9C%EA%B7%B8%EB%8B%88%EC%B2%98-%EC%84%A0%ED%83%9D%ED%95%98%EA%B8%B0\" aria-label=\"2 함수 시그니처 선택하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 함수 시그니처 선택하기</h3>\n<p>함수의 매개변수와 반환값을 정의한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">var</span> strong <span class=\"token operator\">=</span> <span class=\"token function\">isStrongPassword</span><span class=\"token punctuation\">(</span><span class=\"token string\">'password string goes here'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"3-기능상-아주-작은-하나의-관점으로-판단하기\" style=\"position:relative;\"><a href=\"#3-%EA%B8%B0%EB%8A%A5%EC%83%81-%EC%95%84%EC%A3%BC-%EC%9E%91%EC%9D%80-%ED%95%98%EB%82%98%EC%9D%98-%EA%B4%80%EC%A0%90%EC%9C%BC%EB%A1%9C-%ED%8C%90%EB%8B%A8%ED%95%98%EA%B8%B0\" aria-label=\"3 기능상 아주 작은 하나의 관점으로 판단하기 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 기능상 아주 작은 하나의 관점으로 판단하기</h3>\n<p>목표에 아주 조금 다가가기 위해 필요한, 최대한 <strong>간단한 동작에 집중하라.</strong></p>\n<p>내부 구현을 최대한 신경쓰지 말고 어떻게 동작하는지에만 집중하라.</p>\n<p>비밀번호 강도를 생각해보면, 특수문자, 숫자, 길이, 등등 다양한 규칙들이 있을 것이다. 이 모든 것을 포함하는 테스트를 생각하는 건 당연히 어렵다!</p>\n<p>비밀번호 강도에 관해 가장 단순한 규칙은 빈 문자열이다. 이건 매우 쉽다</p>\n<p><strong>비밀번호가 비어있다면 출력값은 언제나 false여야 한다.</strong></p>\n<h3 id=\"4-테스트-구현\" style=\"position:relative;\"><a href=\"#4-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EA%B5%AC%ED%98%84\" aria-label=\"4 테스트 구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 테스트 구현</h3>\n<p>함수의 한줄 한줄을 모른채 테스트 코드 만을 작성해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'isPasswordStrong'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'should give negative result for empty string'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> password <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> result <span class=\"token operator\">=</span> <span class=\"token function\">isPasswordStrong</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">expect</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>to<span class=\"token punctuation\">.</span>be<span class=\"token punctuation\">.</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"5-코드-구현\" style=\"position:relative;\"><a href=\"#5-%EC%BD%94%EB%93%9C-%EA%B5%AC%ED%98%84\" aria-label=\"5 코드 구현 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. 코드 구현</h3>\n<p>이제 테스트를 통과할 수 있는 최소한의 코드만 작성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">function</span> <span class=\"token function\">isPasswordStrong</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">password</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>password<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>계속해서 비밀번호 강도 측정 함수를 개발하고 싶다면 3번부터 5번까지의 과정을 반복하면 된다.</p>\n<p>이렇게 작은 절차를 반복하다보면 결국에는 좋은 결과에 이를 수 있을 것이다.</p>\n<h2 id=\"프로젝트-적용-가능-지점\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%A0%81%EC%9A%A9-%EA%B0%80%EB%8A%A5-%EC%A7%80%EC%A0%90\" aria-label=\"프로젝트 적용 가능 지점 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로젝트 적용 가능 지점</h2>\n<p>다 적용하기 힘들것 같고 일단 일부분만 TDD하게 생각하면서 구현해보는 건 어떨까?</p>\n<ul>\n<li>Form Validation Func</li>\n<li>Login Validation Func</li>\n</ul>\n<div class=\"table-of-contents\">\n<ul>\n<li>\n<p><a href=\"#-tdd%EB%9E%80\">🧪 TDD란</a></p>\n</li>\n<li>\n<p><a href=\"#-%EC%B0%B8%EA%B3%A0%EA%B8%80\">📒 참고글</a></p>\n</li>\n<li>\n<p><a href=\"#-tdd%EB%8A%94-%EC%96%B8%EC%A0%9C-%ED%95%B4%EC%95%BC%ED%95%A0%EA%B9%8C\">❓ TDD는 언제 해야할까?</a></p>\n</li>\n<li>\n<p><a href=\"#-tdd%EB%A5%BC-%EC%9E%98%ED%95%98%EB%8A%94-%EB%B2%95\">🤩 TDD를 잘하는 법</a></p>\n</li>\n<li>\n<p><a href=\"#-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EC%BD%94%EB%93%9C%EB%A5%BC-%EC%9E%98-%EC%A7%9C%EB%8A%94-%EC%82%AC%EA%B3%A0%EB%B2%95\">🧠 테스트 코드를 잘 짜는 사고법</a></p>\n<ul>\n<li><a href=\"#1-%EC%9E%85%EB%A0%A5-%EC%B6%9C%EB%A0%A5-%EA%B2%B0%EC%A0%95%ED%95%98%EA%B8%B0\">1. 입력 출력 결정하기</a></li>\n<li><a href=\"#2-%ED%95%A8%EC%88%98-%EC%8B%9C%EA%B7%B8%EB%8B%88%EC%B2%98-%EC%84%A0%ED%83%9D%ED%95%98%EA%B8%B0\">2. 함수 시그니처 선택하기</a></li>\n<li><a href=\"#3-%EA%B8%B0%EB%8A%A5%EC%83%81-%EC%95%84%EC%A3%BC-%EC%9E%91%EC%9D%80-%ED%95%98%EB%82%98%EC%9D%98-%EA%B4%80%EC%A0%90%EC%9C%BC%EB%A1%9C-%ED%8C%90%EB%8B%A8%ED%95%98%EA%B8%B0\">3. 기능상 아주 작은 하나의 관점으로 판단하기</a></li>\n<li><a href=\"#4-%ED%85%8C%EC%8A%A4%ED%8A%B8-%EA%B5%AC%ED%98%84\">4. 테스트 구현</a></li>\n<li><a href=\"#5-%EC%BD%94%EB%93%9C-%EA%B5%AC%ED%98%84\">5. 코드 구현</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%A0%81%EC%9A%A9-%EA%B0%80%EB%8A%A5-%EC%A7%80%EC%A0%90\">프로젝트 적용 가능 지점</a></p>\n</li>\n</ul>\n</div>"}